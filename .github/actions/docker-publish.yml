name: Build & Publish Cube image

on:
  push:
    branches: [ pre_agg_obervables ]
    # Accélère: on ne rebuilde que quand le code qui impacte l'image change
    paths:
      - 'packages/**'
      - 'lerna.json'
      - 'package.json'
      - 'yarn.lock'
      - '.yarnrc.yml'
      - 'tsconfig.json'
      - 'rust/**'
      - 'Dockerfile' # si jamais
      - '.github/workflows/docker-publish.yml'
  pull_request:
    branches: [ pre_agg_obervables ]
    paths:
      - 'packages/**'
      - 'lerna.json'
      - 'package.json'
      - 'yarn.lock'
      - '.yarnrc.yml'
      - 'tsconfig.json'
      - 'rust/**'
  workflow_dispatch:

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: true

env:
  # <--- Mets ici le nom final de ton image Docker Hub
  DOCKERHUB_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/cube-custom
  # Dockerfile de prod du monorepo Cube
  DOCKERFILE_PATH: packages/cubejs-docker/Dockerfile
  # IMPORTANT: le contexte doit être la racine du repo (.)
  BUILD_CONTEXT: .

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_IMAGE }}
          tags: |
            # tag permanent par commit
            type=raw,value=sha-${{ github.sha }}
            # tag latest uniquement sur la branche par défaut
            type=raw,value=latest,enable={{is_default_branch}}
            # tag PR utile pour tests éphémères
            type=raw,value=pr-${{ github.event.pull_request.number }},enable={{is_pr}}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
