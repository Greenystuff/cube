name: Build & Publish custom Cube image (from source)

on:
  push:
    branches: [ pre_agg_obervables ]
  workflow_dispatch:

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/cube-custom

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- Diagnostic utile ---
      - name: Debug repo layout
        run: |
          echo "PWD=$(pwd)"
          ls -la
          echo "---- cubejs-docker (root) ----"
          ls -la cubejs-docker || true
          echo "---- packages/cubejs-docker ----"
          ls -la packages/cubejs-docker || true
          echo "---- Cherche dev.Dockerfile partout (2 niveaux) ----"
          find . -maxdepth 2 -name "dev.Dockerfile" -print || true

      # --- Détection robuste du chemin du Dockerfile ---
      - name: Detect dev.Dockerfile
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          if [ -f cubejs-docker/dev.Dockerfile ]; then
            echo "DOCKERFILE_PATH=cubejs-docker/dev.Dockerfile" >> $GITHUB_ENV
            echo "BUILD_CONTEXT=." >> $GITHUB_ENV
            echo "Detected: cubejs-docker/dev.Dockerfile (root)"
          elif [ -f packages/cubejs-docker/dev.Dockerfile ]; then
            echo "DOCKERFILE_PATH=packages/cubejs-docker/dev.Dockerfile" >> $GITHUB_ENV
            echo "BUILD_CONTEXT=." >> $GITHUB_ENV
            echo "Detected: packages/cubejs-docker/dev.Dockerfile"
          else
            echo "::error::Aucun dev.Dockerfile trouvé (ni cubejs-docker/dev.Dockerfile ni packages/cubejs-docker/dev.Dockerfile)."
            exit 1
          fi
          echo "Using DOCKERFILE_PATH=${DOCKERFILE_PATH}"
          test -f "${DOCKERFILE_PATH}" || (echo "::error::Le fichier détecté n'existe pas"; exit 1)

      # ⚠️ Assure-toi d'avoir patché dev.Dockerfile pour ne builder que le backend :
      # RUN yarn lerna run build --scope @cubejs-backend/* --include-dependencies --ignore @cubejs-client/* --ignore @cubejs-playground/* --stream --no-prefix

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.IMAGE_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=Cube custom (from source)

      - name: Build & Push (amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: packages/cubejs-docker/dev.Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
