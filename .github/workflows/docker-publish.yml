name: Build & Publish custom Cube image

on:
  push:
    branches: [ pre_agg_obervables ]   # ta branche
  workflow_dispatch:

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/cube-custom

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ðŸ”’ Force lâ€™usage du Dockerfile de prod (pas le dev)
      - name: Set build context
        run: |
          echo "DOCKERFILE_PATH=packages/cubejs-docker/Dockerfile" >> $GITHUB_ENV
          echo "BUILD_CONTEXT=." >> $GITHUB_ENV

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.IMAGE_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      # ðŸ§± Build & push single-arch (linux/amd64) avec le Dockerfile de prod
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # ðŸ‘‰ Si tu veux accÃ©lÃ©rer les builds suivants
          cache-from: type=gha
          cache-to: type=gha,mode=max
